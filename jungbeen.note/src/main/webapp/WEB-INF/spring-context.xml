<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring
		http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">
		
	<context:component-scan base-package="jungbeen.note" />
	<mvc:annotation-driven />
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<mvc:resources mapping="/css/**" location="/WEB-INF/resources/css/" />
	<mvc:resources mapping="/img/**" location="/WEB-INF/resources/img/" />
	<mvc:resources mapping="/js/**" location="/WEB-INF/resources/js/" />
	
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/jungbeen" />
		<property name="resourceRef" value="true" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:jungbeen/note/config/SqlMapConfig.xml"/>
			
		<property name="mapperLocations">
			<array>
				<value>classpath:jungbeen/note/dao/mapper/**/*.xml</value>
			</array>
		</property>
	</bean>
	<mybatis:scan base-package="jungbeen.note.**.dao.mapper" />
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
			</list>
		</property>
	</bean>
	
	<!-- ch06:file uplaod -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

	<!-- resource들의 경우에는 Dispatcher Servlet가 -->
	<!-- 해당 resource를 바로 response에 담아서 보내준다. -->
	<mvc:resources mapping="/upload/**" location="/upload/"/>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="username" value="wnalsgkr@gmail.com"/>
		<property name="password" value="jhkwjzxuqnuhtmsl"/>
		<property name="javaMailProperties">
		<props>
			<prop key="mail.smtp.starttls.enable">true</prop>
			<prop key="mail.smtp.host">smtp.gmail.com</prop>
			<prop key="mail.smtp.port">465</prop>
			<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
			<prop key="mail.smtp.socketFactory.port">465</prop>
			<prop key="mail.smtp.socketFactory.fallback">false</prop>
			<prop key="mail.smtp.auth">true</prop>
		</props>
		</property>
	</bean>
	
</beans>